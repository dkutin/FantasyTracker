{"version":3,"sources":["components/Header.js","components/Footer.js","components/Stats.js","components/Player.js","components/Item.js","components/Featured.js","App.js","serviceWorker.js","index.js"],"names":["Header","id","className","Component","Footer","href","Stats","this","props","stats","playerStats","map","stat","week","pts","ast","reb","blk","stl","trn","analysis","onClick","handleClick","Player","highlight","info","name","full_name","image","player_id","count","key","alt","src","Item","state","isFlipped","bind","e","preventDefault","setState","prevState","flipSpeedFrontToBack","flipSpeedBackToFront","flipDirection","Featured","data","players","player","App","playerData","$","ajax","url","dataType","cache","success","error","xhr","status","err","console","log","alert","getPlayerData","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"8RAgBeA,G,6KAZP,OACI,4BAAQC,GAAG,QACP,yBAAKC,UAAU,UACX,+CACA,0P,GANCC,cCmBNC,E,uKAjBP,OACI,gCACI,yBAAKH,GAAG,UACJ,6BACA,yBAAKC,UAAU,WACX,sDAEJ,yBAAKA,UAAU,WACX,4CAAiB,uBAAGA,UAAU,OAAOG,KAAK,6BAAzB,YAAjB,Y,GAVHF,a,OCuENG,E,uKAnEP,GAAIC,KAAKC,MAAMC,MACX,IAAIC,EAAcH,KAAKC,MAAMC,MAAME,KAAI,SAAUC,GAC7C,OACI,4BACI,4BAAKA,EAAKC,MACV,4BAAKD,EAAKE,KACV,4BAAKF,EAAKG,KACV,4BAAKH,EAAKI,KACV,4BAAKJ,EAAKK,KACV,4BAAKL,EAAKM,KACV,4BAAKN,EAAKO,SAY1B,OANIZ,KAAKC,MAAMY,SAOX,yBAAKC,QAASd,KAAKC,MAAMc,YAAapB,UAAU,QAC5C,yBAAKA,UAAU,WACf,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,kBACX,0BAAMA,UAAU,YACZ,iDADJ,KACqCK,KAAKC,MAAMY,SAAS,IAEzD,8BAEJ,yBAAKlB,UAAU,kBACX,0BAAMA,UAAU,YACZ,iDADJ,KACqCK,KAAKC,MAAMY,SAAS,IAEzD,8BAEJ,yBAAKlB,UAAU,kBACX,0BAAMA,UAAU,YACZ,kDADJ,KACsCK,KAAKC,MAAMY,SAAS,IAE1D,+BAGR,2BAAOlB,UAAU,gBACb,+BACA,4BACI,oCACA,mCACA,mCACA,mCACA,mCACA,mCACA,oCAGJ,+BACKQ,U,GA9DLP,aCoCLoB,E,uKAjCP,GAAIhB,KAAKC,MAAMgB,UACX,IAAIA,EAAYjB,KAAKC,MAAMgB,UAG/B,GAAIjB,KAAKC,MAAMiB,KACX,IAAIC,EAAOnB,KAAKC,MAAMiB,KAAKE,UACvBC,EAAQrB,KAAKC,MAAMiB,KAAKG,MACxBC,EAAYtB,KAAKC,MAAMqB,UAG/B,GAAItB,KAAKC,MAAMsB,MACX,IAAIA,EAAQvB,KAAKC,MAAMsB,MAG3B,OACQ,yBAAKC,IAAKF,EAAW3B,UAAU,OAAOmB,QAASd,KAAKC,MAAMc,aACtD,yBAAKpB,UAAU,iBACf,yBAAKA,UAAU,QACX,2BAAI4B,EAAJ,MAEJ,yBAAK5B,UAAU,eAAeD,GAAIuB,EAAWQ,IAAKN,EAAMO,IAAKL,IAJ7D,IAIsE,6BACtE,0BAAM1B,UAAU,eAAewB,GACpB,IAAVI,GAAe,yBAAK5B,UAAU,WAC3B,yEACA,yBAAKD,GAAG,QAAQ+B,IAAI,QAAQC,IAAI,sH,GA3BnC9B,a,gBCqCN+B,E,kDAjCX,aAAe,IAAD,8BACV,gBACKC,MAAQ,CACTC,WAAW,GAEf,EAAKd,YAAc,EAAKA,YAAYe,KAAjB,gBALT,E,wDAQFC,GACRA,EAAEC,iBACFhC,KAAKiC,UAAS,SAAAC,GAAS,MAAK,CAAEL,WAAYK,EAAUL,gB,+BAKpD,OACI,yBAAKlC,UAAU,aACf,kBAAC,IAAD,CAAekC,UAAW7B,KAAK4B,MAAMC,UACrCM,qBAAsB,GACtBC,qBAAsB,GACtBC,cAAc,YAEV,kBAAC,EAAD,CAAQb,IAAKxB,KAAKC,MAAMiB,KAAKI,UAAWL,UAAWjB,KAAKC,MAAMgB,UAAWC,KAAMlB,KAAKC,MAAMiB,KAAMK,MAAOvB,KAAKC,MAAMsB,MAAOR,YAAaf,KAAKe,cAE3I,kBAAC,EAAD,CAAOO,UAAWtB,KAAKC,MAAMiB,KAAKI,UAAWpB,MAAOF,KAAKC,MAAMC,MAAOW,SAAUb,KAAKC,MAAMY,SAAWE,YAAaf,KAAKe,oB,GAzBrHnB,aC6CJ0C,E,uKA5CP,IAAIf,EAAQ,EACZ,GAAIvB,KAAKC,MAAMsC,KACX,IAAIC,EAAUxC,KAAKC,MAAMsC,KAAKC,QAAQpC,KAAI,SAASqC,GAC/ClB,IACA,IAAIL,EAAOuB,EAAOvB,KACdL,EAAW4B,EAAO5B,SAClBX,EAAQuC,EAAOvC,MACfe,EAAY,GAgBhB,MAb0B,oBAAfJ,EAAS,KAAmBA,EAAS,GAAK,GAC3B,oBAAfA,EAAS,KAAmBA,EAAS,GAAK,GAC3B,oBAAfA,EAAS,KAAmBA,EAAS,GAAK,GAIjDI,EADAJ,EAAS,IAAMA,EAAS,GACZ,QACLA,EAAS,IAAMA,EAAS,IAC/BA,EAAS,IAAMA,EAAS,GACZ,MAEA,SAIR,kBAAC,EAAD,CAAMW,IAAKN,EAAKI,UAAWL,UAAWA,EAAWf,MAAOA,EAAOW,SAAUA,EAAUU,MAAOA,EAAOL,KAAMA,OAIvH,OACI,iCACA,yBAAKvB,UAAU,oBACX,yBAAKA,UAAU,OACf,6CACI,yBAAKA,UAAU,WACV6C,U,GAtCF5C,aC2CR8C,E,kDArCX,WAAYzC,GAAO,IAAD,8BACd,cAAMA,IACD2B,MAAQ,CACTe,WAAY,IAHF,E,4DAQdC,IAAEC,KAAK,CACHC,IAAI,mBACJC,SAAS,OACTC,OAAO,EACPC,QAAS,SAASV,GACdvC,KAAKiC,SAAS,CAACM,KAAMA,KACvBT,KAAK9B,MACPkD,MAAO,SAASC,EAAKC,EAAQC,GACzBC,QAAQC,IAAIF,GACZG,MAAM,iC,0CAMdxD,KAAKyD,kB,+BAIL,OACI,yBAAK9D,UAAU,OACX,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAU4C,KAAMvC,KAAK4B,MAAMW,OAC3B,kBAAC,EAAD,W,GAjCE3C,aCKE8D,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAvB,GACLI,QAAQJ,MAAMA,EAAMwB,c","file":"static/js/main.f33cb3e0.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Header extends Component {\n    render() {\n        return (\n            <header id=\"home\">\n                <div className=\"banner\">\n                    <h1>Fantasy Tracker</h1>\n                    <p>A Yahoo! Fantasy based Application to track and display NBA trends, while a work in progress, this application has big goals in mind with user function to log in and see personalized stats for your fantasy league.\n                    </p>\n                </div>\n            </header>\n        );\n    }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\n\nclass Footer extends Component {\n    render() {\n        return (\n            <footer>\n                <div id=\"footer\">\n                    <hr/>\n                    <div className=\"two-col\">\n                        <p> Made by Dmitry Kutin </p>\n                    </div>\n                    <div className=\"two-col\">\n                        <p> Check out my <a className=\"link\" href=\"https://github.com/dkutin\"> Github </a> </p>\n                    </div>\n                </div>\n            </footer>\n        );\n    }\n}\n\n\nexport default Footer;\n","import React, {Component} from \"react\";\n\nclass Stats extends Component {\n\n    render() {\n\n        if (this.props.stats) {\n            var playerStats = this.props.stats.map(function (stat) {\n                return (\n                    <tr>\n                        <td>{stat.week}</td>\n                        <td>{stat.pts}</td>\n                        <td>{stat.ast}</td>\n                        <td>{stat.reb}</td>\n                        <td>{stat.blk}</td>\n                        <td>{stat.stl}</td>\n                        <td>{stat.trn}</td>\n                    </tr>\n                    )\n            });\n        }\n\n        if (this.props.analysis) {\n            // var analysis = this.props.analysis;\n\n        }\n\n\n        return (\n            <div onClick={this.props.handleClick} className=\"card\">\n                <div className=\"content\">\n                <div className=\"player-analysis\">\n                    <div className=\"analysis-entry\">\n                        <span className=\"analysis\">\n                            <strong> One Week Avg</strong>: {this.props.analysis[1]}\n                        </span>\n                        <br/>\n                    </div>\n                    <div className=\"analysis-entry\">\n                        <span className=\"analysis\">\n                            <strong> Two Week Avg</strong>: {this.props.analysis[2]}\n                        </span>\n                        <br/>\n                    </div>\n                    <div className=\"analysis-entry\">\n                        <span className=\"analysis\">\n                            <strong> One Month Avg</strong>: {this.props.analysis[4]}\n                        </span>\n                        <br/>\n                    </div>\n                </div>\n                <table className=\"player-stats\">\n                    <thead>\n                    <tr>\n                        <th>Week</th>\n                        <th>Pts</th>\n                        <th>Ast</th>\n                        <th>Reb</th>\n                        <th>Blk</th>\n                        <th>Stl</th>\n                        <th>TO</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                        {playerStats}\n                    </tbody>\n                </table>\n                \n                </div>\n            </div>);\n    }\n}\n\nexport default Stats;\n\n","import React, {Component} from \"react\";\n\nclass Player extends Component {\n\n    render() {\n        if (this.props.highlight) {\n            var highlight = this.props.highlight;\n        }\n    \n        if (this.props.info) {\n            var name = this.props.info.full_name;\n            var image = this.props.info.image;\n            var player_id = this.props.player_id;\n        }\n    \n        if (this.props.count) {\n            var count = this.props.count;\n        }\n\n        return (\n                <div key={player_id} className=\"card\" onClick={this.props.handleClick} >\n                    <div className=\"content front\">\n                    <div className=\"rank\">\n                        <p>{count}.</p>\n                    </div>\n                    <img className=\"player-image\" id={highlight} alt={name} src={image}/> <br/>\n                    <span className=\"player-name\">{name}</span>\n                    {count === 1 && <div className=\"tooltip\">\n                        <p> Click/Tap on a player card to view stats </p>\n                        <img id=\"arrow\" alt=\"arrow\" src=\"https://cdn3.iconfinder.com/data/icons/google-material-design-icons/48/ic_keyboard_arrow_down_48px-128.png\" />\n                        </div>}               \n                </div>\n                </div>\n        );\n    }\n\n}\n\nexport default Player;","import React, {Component} from \"react\";\nimport Stats from './Stats';\nimport Player from './Player';\nimport ReactCardFlip from 'react-card-flip';\n\nclass Item extends Component {\n    constructor() {\n        super();\n        this.state = {\n            isFlipped: false\n          };\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick(e) {\n        e.preventDefault();\n        this.setState(prevState => ({ isFlipped: !prevState.isFlipped }));\n    }\n\n    render() {\n\n        return (\n            <div className=\"three-col\">\n            <ReactCardFlip isFlipped={this.state.isFlipped}\n            flipSpeedFrontToBack={0.5}\n            flipSpeedBackToFront={0.5}\n            flipDirection=\"vertical\">\n                {/* TODO: Only pass one prop with a combination */}\n                <Player key={this.props.info.player_id} highlight={this.props.highlight} info={this.props.info} count={this.props.count} handleClick={this.handleClick} />\n\n                <Stats player_id={this.props.info.player_id} stats={this.props.stats} analysis={this.props.analysis}  handleClick={this.handleClick} />\n\n            </ReactCardFlip>\n            </div>\n        );\n    }\n\n}\n\nexport default Item;","import React, {Component} from \"react\";\nimport Item from './Item';\n\nclass Featured extends Component {\n\n    render() {\n        var count = 0;\n        if (this.props.data) {\n            var players = this.props.data.players.map(function(player){\n                count++;\n                var info = player.info;\n                var analysis = player.analysis;\n                var stats = player.stats;\n                var highlight = '';\n\n                // Check that all values are set.\n                if (typeof analysis[1] == 'undefined') analysis[1] = 0.00;\n                if (typeof analysis[2] == 'undefined') analysis[2] = 0.00;\n                if (typeof analysis[4] == 'undefined') analysis[4] = 0.00;\n                \n                // TODO: This is going to need rework as to how we suggest players\n                if (analysis[1] >= analysis[2]) {\n                    highlight = 'green';\n                } else if (analysis[4] >= analysis[1] &&\n                    analysis[4] >= analysis[2]) {\n                    highlight = 'red';\n                } else {\n                    highlight = 'yellow';\n                }\n                return (\n                    // TODO: Have only key, player, stat fields \n                        <Item key={info.player_id} highlight={highlight} stats={stats} analysis={analysis} count={count} info={info}/>\n                    );\n            })\n        }\n        return (\n            <section>\n            <div className=\"featured-content\">\n                <div className=\"row\">\n                <h2> All Players </h2>\n                    <div className=\"players\">\n                        {players}\n                    </div>\n                </div>\n            </div>\n            </section>\n        );\n    }\n}\n\nexport default Featured;\n","import React, { Component } from 'react';\nimport $ from 'jquery';\nimport './App.css';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Featured from './components/Featured';\n\nclass App extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            playerData: {}\n        };\n    }\n\n    getPlayerData(){\n        $.ajax({\n            url:\"/playerData.json\",\n            dataType:'json',\n            cache: false,\n            success: function(data){\n                this.setState({data: data});\n            }.bind(this),\n            error: function(xhr, status, err){\n                console.log(err);\n                alert(\"Failed to load JSON data\");\n            }\n        });\n    }\n\n    componentDidMount(){\n        this.getPlayerData();\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <Header/>\n                <Featured data={this.state.data}/>\n                <Footer/>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}